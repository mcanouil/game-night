# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]

name: render-readme

jobs:
  render-readme:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1

      - run: |
          sudo apt-get update && sudo apt-get install chromium-browser libmagick++-dev libcurl4-openssl-dev

      - name: Install pak and query dependencies
        run: |
          cat("::group::Install pak\n")
          options(pak.no_extra_messages = TRUE)
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps(c("rmarkdown", "xaringan", "magick", "callr", "rstudio/chromote"), dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Get R and OS version
        id: get-version
        run: |
          cat("::set-output name=os-version::", sessionInfo()$running, "\n", sep = "")
          cat("::set-output name=r-version::", R.Version()$version.string, "\n", sep = "")
          cat("::endgroup::\n")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}/*
            !${{ env.R_LIBS_USER }}/pak
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - name: Install dependencies
        run: |
          cat("::group::Install dependencies\n")
          options(pak.no_extra_messages = TRUE)
          pak::pkg_install(c("rmarkdown", "xaringan", "magick", "callr", "rstudio/chromote"))
          cat("::endgroup::\n")
        shell: Rscript {0}

      - name: Session info
        run: |
          cat("::group::Session info\n")
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
          cat("::endgroup::\n")
        shell: Rscript {0}

      - name: Don't use tar 1.30 from Rtools35 to store the cache
        shell: bash
        run: |
          if command -v /c/Rtools/bin/tar && /c/Rtools/bin/tar --version | grep -q 'tar (GNU tar) 1.30'
            then echo 'C:/Program Files/Git/usr/bin' >> $GITHUB_PATH
          fi

      - name: Render README.Rmd
        run: Rscript -e 'if (file.exists("README.Rmd")) rmarkdown::render("README.Rmd")'

      - name: Commit results
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add posters/*
          git add thumbs/*
          git commit -am 'Build posters' || echo "No changes to commit"
          git push origin || echo "No changes to commit"
